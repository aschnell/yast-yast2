/**
 * Module:		common_messages.ycp
 *
 * Authors:             Gabriele Strattner <gs@suse.de>
 *			Stefan Hundhammer <sh@suse.de>
 *
 * $Id$
 *
 * Provides often used messages and button labels.
 *
 * See also <a href="../README.popups">README.popups</a>
 *
 * It is a replacement for the include common_messages.ycp,
 * (For performance reasons: using "include" in multiple files parses
 * the inclusion each time, whereas "import" needs to parse a file only once.)
 *
 * NOTE: remember to keep the both files in sync while they coexist!
 */

{

    textdomain "base";

    // it is misaligned because there used to be UI() around it

      global define string AddButton() ``{
	  // this is a button label
	  return _("&Add");
      }
      global define string CancelButton() ``{
	  // this is a button label
	  return _("&Cancel");
      }
      global define string ContinueButton() ``{
	  // this is a button label
	  return _("C&ontinue");
      }
      global define string YesButton() ``{
	  // this is a button label
	  return _("&Yes");
      }
      global define string NoButton() ``{
	  // this is a button label
	  return _("&No");
      }
      global define string FinishButton() ``{
	  // this is a button label
	  return _("&Finish");
      }
       global define string EditButton() ``{
	  // this is a button label
	  return _("Ed&it");
      }
      global define string OKButton() ``{
	  // this is a button label
	  return _("&OK");
      }
      global define string AbortButton() ``{
	  // TODO resolve the hack in clients/installation.ycp
	  // where UI::AbortButtonLabel is overriden
	  // this is a button label
	  return _("Abo&rt");
      }
      global define string IgnoreButton() ``{
	  // this is a button label
	  return _("&Ignore");
      }
      global define string NextButton() ``{
	  // this is a button label
	  return _("&Next");
      }
      global define string NewButton() ``{
	  // this is a button label
	  return _("Ne&w");
      }
      global define string DeleteButton() ``{
	  // this is a button label
	  return _("Dele&te");
      }
      global define string BackButton() ``{
	  // this is a button label
	  return _("&Back");
      }
      global define string AcceptButton() ``{
	  // this is a button label
	  return _("&Accept");
      }
      global define string DoNotAcceptButton() ``{
	  // this is a button label
	  return _("&Do Not Accept");
      }
      global define string QuitButton() ``{
	  // this is a button label
	  return _("&Quit");
      }
      global define string RetryButton() ``{
	  // this is a button label
	  return _("&Retry");
      }
      global define string HelpButton() ``{
	  // this is a button label
	  return _("&Help");
      }
      global define string InstallButton() ``{
	  // this is a button label
	  return _("&Install");
      }
      global define string DontInstallButton() ``{
	  // this is a button label
	  return _("&Don't install");
      }
      global define string DownloadButton() ``{
	  // this is a button label
	  return _("&Download");
      }
      global define string SaveButton() ``{
	  // this is a button label
	  return _("&Save");
      }
      global define string StopButton() ``{
	  // this is a button label
	  return _("&Stop");
      }
      global define string CloseButton() ``{
	  // this is a button label
	  return _("C&lose");
      }

      global define string WarningMsg() ``{
	  // this string is usually used as headline of a popup
	  return _("Warning");
      }
      global define string ErrorMsg() ``{
	  // this string is usually used as headline of a popup
	  return _("Error");
      }

      global define string PleaseWaitMsg() ``{
	  return _("Please wait...");
      }


      global define map DefaultFunctionKeyMap() ``{
	  map fkeys = $[];

	  // A map only accepts constants as keys, so we have to add() each
	  // item. It will always be a term since it has to go through the
	  // translator.

	  fkeys = add( fkeys, HelpButton()		, 1 );
	  fkeys = add( fkeys, AddButton()		, 3 );
	  fkeys = add( fkeys, EditButton()		, 4 );
	  fkeys = add( fkeys, DeleteButton()		, 5 );
	  fkeys = add( fkeys, BackButton()		, 8 );

	   // Negative Answers: [F9]
	  fkeys = add( fkeys, CancelButton()		, 9 );
	  fkeys = add( fkeys, NoButton()		, 9 );
	  fkeys = add( fkeys, DoNotAcceptButton()	, 9 );
	  fkeys = add( fkeys, DontInstallButton()	, 9 );
	  fkeys = add( fkeys, QuitButton()		, 9 );

	  // Positive Answers: [F10]
	  fkeys = add( fkeys, OKButton()		, 10 );
	  fkeys = add( fkeys, AcceptButton()		, 10 );
	  fkeys = add( fkeys, YesButton()		, 10 );
	  fkeys = add( fkeys, CloseButton()		, 10 );
	  fkeys = add( fkeys, ContinueButton()		, 10 );
	  fkeys = add( fkeys, FinishButton()		, 10 );
	  fkeys = add( fkeys, InstallButton()		, 10 );
	  fkeys = add( fkeys, NextButton()		, 10 );
	  fkeys = add( fkeys, SaveButton()		, 10 );

	  return fkeys;
      }

}
