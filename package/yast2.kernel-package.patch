Index: library/system/src/Kernel.ycp
===================================================================
--- library/system/src/Kernel.ycp	(revision 32510)
+++ library/system/src/Kernel.ycp	(working copy)
@@ -342,16 +342,7 @@
      */
     global define void ProbeKernel ()
     {
-	if (!Arch::has_smp ())
-	{
-	    y2milestone ("ProbeKernel: non SMP board");
-	    kernel_packages = ["kernel-default"];
-	}
-	else
-	{
-	    y2milestone ("ProbeKernel: SMP board");
-	    kernel_packages = ["kernel-smp"];
-	}
+	kernel_packages = ["kernel-default"];
 
 	if (Arch::is_uml ())
 	{
@@ -395,59 +386,14 @@
 		kernel_packages = ["kernel-bigsmp"];
 	    }
 	}
-	else if (Arch::alpha ())
-	{
-	    if (!Arch::has_smp () && Linuxrc::serial_console ())
-	    {
-		kernel_packages = ["kernel-serial"];
-	    }
-	}
 	else if (Arch::ppc ())
 	{
 	    binary = "vmlinux";
 
-	    if (Arch::board_mac_new () || Arch::board_mac_old ())
+	    if (Arch::board_iseries ())
 	    {
-	        if (Arch::board_compatible () == "MacRISC4")
-		{
-		    // G5 and newer
-		    kernel_packages = ["kernel-ppc64"];
-		}
-		else
-		{
-		    // MacRISC, MacRISC2, MacRISC3
-		    kernel_packages = ["kernel-default"];
-		}
-	    }
-	    else if (Arch::board_chrp ())
-	    {
-		string chrp_cpu = "";
-		list<map> cpuProbe = (list<map>) SCR::Read(.probe.cpu);
-		foreach (map cpuProbe_map, cpuProbe, {
-		    chrp_cpu = cpuProbe_map["model"]:"";
-		    chrp_cpu = tolower (chrp_cpu);
-		});
-
-		//   booting a 32bit kernel on POWER3
-		if ((issubstring (chrp_cpu, "power3") && Arch::ppc32 ())
-		    || Arch::ppc64 ())
-		{
-		    kernel_packages = ["kernel-ppc64"];
-		}
-		else
-		{
-		    kernel_packages = ["kernel-default"];
-		}
-	    }
-	    else if (Arch::board_iseries ())
-	    {
 		kernel_packages = ["kernel-iseries64"];
 	    }
-	    else if (Arch::board_prep ())
-	    {
-		kernel_packages = ["kernel-default"];
-	    }
-	    // if hwinfo could not match the board type, use the cpu type.
 	    else if (Arch::ppc32 ())
 	    {
 		kernel_packages = ["kernel-default"];
