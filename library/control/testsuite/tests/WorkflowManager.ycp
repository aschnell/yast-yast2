{

// testedfiles: WorkflowManager.ycp

include "testsuite.ycp";

map READ = $[
    "target" : $[
	"size" : 0,
    ],
];

map WRITE = $[];

map EXEC = $[];

TESTSUITE_INIT([READ, WRITE, EXEC], nil);

import "WorkflowManager";
import "ProductControl";

// init -->
ProductControl::workflows = [$["defaults":$["archs":"i386"],"label":"Preparation","mode":"installation","modules":[$["arguments":$["first_run":"yes"], "enable_back":"no", "enable_next":"yes", "label":"Language", "name":"language", "retranslate":true], $["label":"Perform Installation", "name":"finish"]], "stage":"initial"], $["defaults":$["archs":"x86_64"], "label":"Preparation", "mode":"installation", "modules":[$["arguments":$["first_run":"yes"], "enable_back":"no", "enable_next":"yes", "label":"Language", "name":"language", "retranslate":true], $["label":"Perform Installation", "name":"finish"]], "stage":"initial"], $["defaults":$["archs":"i386"], "label":"Preparation", "mode":"update", "modules":[$["arguments":$["first_run":"yes"], "enable_back":"no", "enable_next":"yes", "label":"Language", "name":"language", "retranslate":true], $["label":"Perform Installation", "name":"finish"]], "stage":"initial"], $["defaults":$["archs":"x86_64"], "label":"Preparation", "mode":"update", "modules":[$["arguments":$["first_run":"yes"], "enable_back":"no", "enable_next":"yes", "label":"Language", "name":"language", "retranslate":true], $["label":"Perform Installation", "name":"finish"]],"stage":"initial"]];
WorkflowManager::PrepareSystemWorkflows();

ProductControl::proposals = [$["archs":"", "mode":"installation", "name":"initial", "proposal_modules":["hwinfo", "keyboard", "mouse", "partitions", "software", "bootloader", "timezone", "language", "runlevel"], "proposal_tabs":[$["label":"Overview", "proposal_modules":["partitions", "software_simple", "language_simple"]], $["label":"Expert", "proposal_modules":["hwinfo", "keyboard", "mouse", "partitions", "software", "bootloader", "timezone", "language", "runlevel"]]], "stage":"initial"], $["archs":"", "mode":"demo", "name":"initial", "proposal_modules":["hwinfo", "keyboard", "mouse", "partitions", "software", "bootloader", "timezone", "language", "runlevel"], "proposal_tabs":[$["label":"Overview", "proposal_modules":["partitions", "software_simple", "language_simple"]], $["label":"Expert", "proposal_modules":["hwinfo", "keyboard", "mouse", "partitions", "software", "bootloader", "timezone", "language", "runlevel"]]], "stage":"initial"], $["archs":"", "mode":"autoinstallation", "name":"initial", "proposal_modules":["hwinfo", "keyboard", "mouse", "partitions", "software", "bootloader", "timezone", "language", "runlevel"], "proposal_tabs":[$["label":"Overview", "proposal_modules":["partitions", "software_simple", "language_simple"]], $["label":"Expert", "proposal_modules":["hwinfo", "keyboard", "mouse", "partitions", "software", "bootloader", "timezone", "language", "runlevel"]]], "stage":"initial"], $["archs":"", "mode":"", "name":"network", "proposal_modules":[$["name":"lan", "presentation_order":"20"], $["name":"dsl", "presentation_order":"30"], $["name":"isdn", "presentation_order":"40"], $["name":"modem", "presentation_order":"50"], $["name":"remote", "presentation_order":"60"], $["name":"firewall", "presentation_order":"10"], $["name":"proxy", "presentation_order":"70"]], "stage":"continue"], $["archs":"", "mode":"", "name":"network", "proposal_modules":[$["name":"lan", "presentation_order":"20"], $["name":"dsl", "presentation_order":"30"], $["name":"isdn", "presentation_order":"40"], $["name":"modem", "presentation_order":"50"], $["name":"remote", "presentation_order":"60"], $["name":"firewall", "presentation_order":"10"], $["name":"proxy", "presentation_order":"70"]], "stage":"normal"]];
WorkflowManager::PrepareSystemProposals();
// init <--


TEST (``(WorkflowManager::SetBaseWorkflow (false)), [], nil);

DUMP ("");
DUMP ("Adding new Add-On product");
TEST (``(WorkflowManager::AddWorkflow (`addon, 3, "")), [], nil);
TEST (``(WorkflowManager::GetAllUsedControlFiles ()), [], nil);

DUMP ("");
DUMP ("Adding another Add-On product");
TEST (``(WorkflowManager::AddWorkflow (`addon, 12, "")), [], nil);
TEST (``(WorkflowManager::GetAllUsedControlFiles ()), [], nil);

DUMP ("");
DUMP ("Removing the first Add-On product");
TEST (``(WorkflowManager::RemoveWorkflow (`addon, 3, "")), [], nil);
TEST (``(WorkflowManager::GetAllUsedControlFiles ()), [], nil);

DUMP ("");
DUMP ("Removing the first Add-On product");
TEST (``(WorkflowManager::MergeWorkflows ()), [READ, WRITE, EXEC], nil);

DUMP ("");
DUMP ("Current Settings");
TEST (``(WorkflowManager::DumpCurrentSettings ()), [], nil);

}
