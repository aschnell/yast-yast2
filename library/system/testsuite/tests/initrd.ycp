/**
 * File:
 *      initrd.ycp
 *
 * Module:
 *      Bootloader
 *
 * Summary:
 *      testsuite for initrd module
 *
 * Authors:
 *      Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 *
 */

// testedfiles: Initrd.ycp Testsuite.ycp

{
    include "testsuite.ycp";

    // minimal "don't care" SCR data to work with the constructor
    map READ = $[
	"sysconfig" : $[
	    "kernel" : $[
		"INITRD_MODULES" : "reiserfs lvmmod",
	    ],
        ],
	"probe" : $[
	    "architecture" : "i386",
	    "has_apm" : true,
	    "has_pcmcia" : false,
	    "has_smp" : false,
	    "system" : nil,
	    "is_uml" : false,
	],
	"target" : $[
	    "string" : "",
	],
	"etc" : $[
	    "install_inf" : $[
		"InstMode" : "",
	    ],
	],
    ];

    TESTSUITE_INIT ([READ, $[], $[]], 0);

    import "Initrd";
    import "Mode";

    TEST(``(Initrd::ListModules ()), [READ, $[], $[]], 0);
    DUMP("Now reseting");
    TEST(``(Initrd::Reset ()), [READ, $[], $[]], 0);
    DUMP("Reading again");
    TEST(``(Initrd::ListModules ()), [READ, $[], $[]], 0);
    DUMP("Reseting again");
    TEST(``(Initrd::Reset ()), [READ, $[], $[]], 0);
    DUMP("Adding ne2k");
    TEST(``(Initrd::AddModule ("ne2k", "io=0x300, irq=5")),
	[READ, $[], $[]], 0);
    TEST(``(Initrd::ListModules ()), [READ, $[], $[]], 0);
    DUMP("Removing lvmmod");
    TEST(``(Initrd::RemoveModule ("lvmmod")), [READ, $[], $[]], 0);
    TEST(``(Initrd::ListModules ()), [READ, $[], $[]], 0);
    DUMP("Writing");
    TEST(``(Initrd::Write ()), [READ, $[], $[]], 0);
    DUMP("Importing with filtered module");
    TEST(``(Initrd::Import ($["list" : ["ne2k", "xfs_dmapi", "xfs_support", "lvmmod"]])), [READ, $[], $[]], 0);
    DUMP("Writing");
    TEST(``(Initrd::Write ()), [READ, $[], $[]], 0);
    DUMP("Setting Mode::Update");
    Mode::update = true;
    DUMP("Importing with filtered module");
    TEST(``(Initrd::Import ($["list" : ["ne2k", "xfs_dmapi", "xfs_support", "lvmmod"]])), [READ, $[], $[]], 0);
    TEST(``(Initrd::ListModules ()), [READ, $[], $[]], 0);
    DUMP("Writing");
    TEST(``(Initrd::Write ()), [READ, $[], $[]], 0);

}
