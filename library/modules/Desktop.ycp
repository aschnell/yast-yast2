/**
 * File:	modules/Desktop.ycp
 * Package:	yast2
 * Summary:	Handling of .dektop entries
 * Author:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

module "Desktop";
textdomain "base";

/**
 * YaST configuration modules
 */
global map Modules = $[];

/**
 * YaST configuration groups
 */
global map Groups = $[];

/**
 * The optional agent path to the desktop files
 */
global path AgentPath = .yast2.desktop;

/**
 * Read module and group data from desktop files
 * @param Values list of values to be parsed (empty to read all)
 */
global define void Read(list Values) ``{

    /* read modules */
    map filemap = $[];
    path filepath = nil;
    string name = nil;

    path ps = add(AgentPath, "s");
    list files = SCR::Dir(ps);

    /* read modules */
    foreach(string file, files, ``{
	filemap = $[];
	path pv = add(AgentPath, "v");
	filepath = add(pv, file) + ."Desktop Entry";
	list values = SCR::Dir(filepath);
	if(Values != nil && Values != []) values = Values;
	foreach(string value, values, ``{
	    string ret = (string) SCR::Read(add(filepath, value));
	    if(ret != nil) filemap[value] = ret;
	});
	name = (string) SCR::Read(filepath + ."X-SuSE-YaST-Call");
	if(name != "" && name != nil) Modules[name] = filemap;
    });

    /* read groups */
    list groups = SCR::Dir(.yast2.groups.s);
    foreach(string group, groups, ``{
	filemap = $[];
	filepath = add(.yast2.groups.v, group);
	list values = SCR::Dir(filepath);
	foreach(string value, values, ``{
	    string ret = (string) SCR::Read(add(filepath, value));
	    // y2milestone("%1[%2]=%3", file, value, ret);
	    if(ret != nil) filemap[value] = ret;
	});
	Groups[group] = filemap;
    });

}

/* EOF */
}
