/**
 * File:	modules/Label.ycp
 * Package:	yast2
 * Summary:	Often used messages and button labels
 * Authors:	Gabriele Strattner <gs@suse.de>
 *		Stefan Hundhammer <sh@suse.de>
 *		Arvin Schnell <arvin@suse.de>
 *
 * $Id$
 *
 * See also <a href="../README.popups">README.popups</a>
 */

{

module "Label";
textdomain "base";

global define string AddButton() ``{
  /* Button label */
  return _("&Add");
}
global define string CancelButton() ``{
  /* Button label */
  return _("&Cancel");
}
global define string ContinueButton() ``{
  /* Button label */
  return _("C&ontinue");
}
global define string YesButton() ``{
  /* Button label */
  return _("&Yes");
}
global define string NoButton() ``{
  /* Button label */
  return _("&No");
}
global define string FinishButton() ``{
  /* Button label */
  return _("&Finish");
}
global define string EditButton() ``{
  /* Button label */
  return _("Ed&it");
}
global define string OKButton() ``{
  /* Button label */
  return _("&OK");
}
global define string AbortButton() ``{
    /* Button label */
    return _("Abo&rt");
}
global define string AbortInstallationButton () ``{
    /* Button label */
    return _("Abo&rt Installation");
}
global define string IgnoreButton() ``{
  /* Button label */
  return _("&Ignore");
}
global define string NextButton() ``{
  /* Button label */
  return _("&Next");
}
global define string NewButton() ``{
  /* Button label */
  return _("Ne&w");
}
global define string DeleteButton() ``{
  /* Button label */
  return _("Dele&te");
}
global define string BackButton() ``{
  /* Button label */
  return _("&Back");
}
global define string AcceptButton() ``{
  /* Button label */
  return _("&Accept");
}
global define string DoNotAcceptButton() ``{
  /* Button label */
  return _("&Do Not Accept");
}
global define string QuitButton() ``{
  /* Button label */
  return _("&Quit");
}
global define string RetryButton() ``{
  /* Button label */
  return _("&Retry");
}
global define string ReplaceButton() ``{
  /* Button label */
  return _("&Replace");
}
global define string UpButton() ``{
  /* Button label */
  return _("&Up");
}
global define string DownButton() ``{
  /* Button label */
  return _("Do&wn");
}
global define string SelectButton() ``{
  /* Button label */
  return _("Sele&ct");
}
global define string RemoveButton() ``{
  /* Button label */
  return _("Remo&ve");
}
global define string RefreshButton() ``{
  /* Button label */
  return _("&Refresh");
}
global define string HelpButton() ``{
  /* Button label */
  return _("&Help");
}
global define string InstallButton() ``{
  /* Button label */
  return _("&Install");
}
global define string DontInstallButton() ``{
  /* Button label */
  return _("&Don't install");
}
global define string DownloadButton() ``{
  /* Button label */
  return _("&Download");
}
global define string SaveButton() ``{
  /* Button label */
  return _("&Save");
}
global define string StopButton() ``{
  /* Button label */
  return _("&Stop");
}
global define string CloseButton() ``{
  /* Button label */
  return _("C&lose");
}

global define string BrowseButton() ``{
  /* Button label */
  return _("Bro&wse");
}
global define string CreateButton() ``{
  /* Button label */
  return _("Crea&te");
}

global define string WarningMsg() ``{
  // this string is usually used as headline of a popup
  return _("Warning");
}

global define string ErrorMsg() ``{
  // this string is usually used as headline of a popup
  return _("Error");
}

global define string PleaseWaitMsg() ``{
  // this string is usually used as headline of a popup
  return _("Please wait...");
}

global define map<string, integer> DefaultFunctionKeyMap() ``{
    map<string, integer> fkeys = $[];

    // A map only accepts constants as keys, so we have to add() each
    // item. It will always be a term since it has to go through the
    // translator.

    fkeys = add( fkeys, HelpButton()		, 1 );
    fkeys = add( fkeys, AddButton()		, 3 );
    fkeys = add( fkeys, EditButton()		, 4 );
    fkeys = add( fkeys, DeleteButton()		, 5 );
    fkeys = add( fkeys, BackButton()		, 8 );

    // Negative Answers: [F9]
    fkeys = add( fkeys, CancelButton()		, 9 );
    fkeys = add( fkeys, NoButton()		, 9 );
    fkeys = add( fkeys, DoNotAcceptButton()	, 9 );
    fkeys = add( fkeys, DontInstallButton()	, 9 );
    fkeys = add( fkeys, QuitButton()		, 9 );

    // Positive Answers: [F10]
    fkeys = add( fkeys, OKButton()		, 10 );
    fkeys = add( fkeys, AcceptButton()		, 10 );
    fkeys = add( fkeys, YesButton()		, 10 );
    fkeys = add( fkeys, CloseButton()		, 10 );
    fkeys = add( fkeys, ContinueButton()	, 10 );
    fkeys = add( fkeys, FinishButton()		, 10 );
    fkeys = add( fkeys, InstallButton()		, 10 );
    fkeys = add( fkeys, NextButton()		, 10 );
    fkeys = add( fkeys, SaveButton()		, 10 );

    return fkeys;
}

/* EOF */
}
