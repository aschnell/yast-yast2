/**
 * File:	modules/Package.ycp
 * Package:	yast2
 * Summary:	Packages manipulation
 * Authors:	Martin Vidner <mvidner@suse.cz>
 *		Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

module "Package";
textdomain "base";

import "Mode";
import "PackageAI";
import "PackageSystem";

map FunctionsSystem = $[
    "DoInstall"	: PackageSystem::Install,
    "DoRemove"	: PackageSystem::Remove,
    "DoInstallAndRemove" : PackageSystem::DoInstallAndRemove,
    "Available"	: PackageSystem::Available,
    "Installed"	: PackageSystem::Installed,
];

map FunctionsAI = $[
    "DoInstall"	: PackageAI::Install,
    "DoRemove"	: PackageAI::Remove,
    "DoInstallAndRemove" : PackageAI::DoInstallAndRemove,
    "Available"	: PackageAI::Available,
    "Installed"	: PackageAI::Installed,
];

map Functions = FunctionsSystem;
if(Mode::config) Functions = FunctionsAI;

include "package/common.ycp";

boolean DoInstall(list<string> packages) {
    term function = Functions["DoInstall"]:nil;
    return function(packages);
}

boolean DoRemove(list<string> packages) {
    term function = Functions["DoRemove"]:nil;
    return function(packages);
}

boolean DoInstallAndRemove(list<string> toinstall, list<string> toremove) {
    term function = Functions["DoInstallAndRemove"]:nil;
    return function(packages);
}

boolean Available(string package) {
    term function = Functions["Available"]:nil;
    return function(packages);
}

boolean Installed(string package) {
    term function = Functions["Installed"]:nil;
    return function(packages);
}

/* EOF */
}
